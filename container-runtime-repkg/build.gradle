import com.virjar.ratel.allcommon.Constants

apply plugin: 'com.android.application'


def RATEL_NATIVE_LIB_NAME = Constants.RATEL_NATIVE_LIB_NAME;// "ratelnative"
def buildTimestamp = String.valueOf(System.currentTimeMillis());

def ABI_ARM64_V8a = "arm64-v8a"
def ABI_ARMEABI_V7a = "armeabi-v7a"

def ABIS = [ABI_ARM64_V8a, ABI_ARMEABI_V7a]
StringBuilder sb = new StringBuilder();
for (String abi : ABIS) {
    sb.append(abi);
    sb.append(",");
}
sb.setLength(sb.length() - 1)


//write engine meta info builder,we will generate into ratelConfig.properties
Properties engineProperties = new Properties()
engineProperties.setProperty("ratel_engine_versionCode", String.valueOf(rootProject.ext.ratelEngineVersionCode))
engineProperties.setProperty("ratel_engine_versionName", String.valueOf(rootProject.ext.ratelEngineVersion))
engineProperties.setProperty("ratel_engine_buildTimestamp", buildTimestamp)
engineProperties.setProperty("ratel_native_libName", RATEL_NATIVE_LIB_NAME)
engineProperties.setProperty("ratel_support_abis", sb.toString())

FileOutputStream fileOutputStream = new FileOutputStream(new File(rootProject.rootDir, "container-builder-repkg/src/main/resources/ratel_engine.properties"))
engineProperties.store(fileOutputStream, "auto generated by ratel engine builder")
fileOutputStream.close()


android {
    compileSdkVersion 28


    defaultConfig {
        applicationId "com.virjar.ratel.core.runtime"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode rootProject.ext.ratelEngineVersionCode
        versionName rootProject.ext.ratelEngineVersion
        // buildConfigField '', 'RatelRuntimeBuildTimestamp', String.valueOf(System.currentTimeMillis())
        buildConfigField 'long', 'buildTimestamp', buildTimestamp + 'L';
        buildConfigField 'String', 'RATEL_NATIVE_LIB_NAME', '\"' + Constants.RATEL_NATIVE_LIB_NAME + '\"';
        buildConfigField 'boolean', 'forceUserDexMakder', rootProject.hasProperty('forceUserDexMakder') ? 'true' : 'false';
        externalNativeBuild {
            cmake {
                // 请注意，目前不支持64位 'x86', 'x86_64', 'arm64-v8a'
                // 受限于sandhook，现在我们也不支持x86了
                abiFilters ABI_ARM64_V8a, ABI_ARMEABI_V7a
                // c++代码阅读，默认使用的64位。如果想要查看32位代码，那么可以暂时关闭64位
                //abiFilters "armeabi-v7a"
                arguments "-DLIB_NAME=${RATEL_NATIVE_LIB_NAME}"
            }
        }

    }

    signingConfigs {
        release {
            storeFile rootProject.file('script/hermes_key')
            storePassword "hermes"
            keyAlias "hermes"
            keyPassword "hermes"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    lintOptions {
        abortOnError false
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support:support-annotations:28.0.0'

    compileOnly project(':base-lib-stub')
    api project(':base-lib-ratel-api')
    api project(':managerbridge')
    api project(path: ':base-lib-dx')
    implementation (name: 'base-lib-allcommon', ext: 'jar')
//    api project(':nativehide')
}
